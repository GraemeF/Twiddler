<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Caliburn.Unity</name>
    </assembly>
    <members>
        <member name="T:Caliburn.Unity.ProxyBuilderStrategy">
            <summary>
            A <see cref="T:Microsoft.Practices.ObjectBuilder2.BuilderStrategy"/> for proxies.
            </summary>
        </member>
        <member name="M:Caliburn.Unity.ProxyBuilderStrategy.#ctor(Microsoft.Practices.Unity.IUnityContainer,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:Caliburn.Unity.ProxyBuilderStrategy"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="registry">The registry.</param>
        </member>
        <member name="M:Caliburn.Unity.ProxyBuilderStrategy.PreBuildUp(Microsoft.Practices.ObjectBuilder2.IBuilderContext)">
            <summary>
            Called during the chain of responsibility for a build operation. The
            PreBuildUp method is called when the chain is being executed in the
            forward direction.
            </summary>
            <param name="context">Context of the build operation.</param>
        </member>
        <member name="T:Caliburn.Unity.ProxyExtension">
            <summary>
            A <see cref="T:Microsoft.Practices.Unity.UnityContainerExtension"/> for proxies.
            </summary>
        </member>
        <member name="M:Caliburn.Unity.ProxyExtension.Initialize">
            <summary>
            Initial the container with this extension's functionality.
            </summary>
            <remarks>
            When overridden in a derived class, this method will modify the given
            <see cref="T:Microsoft.Practices.Unity.ExtensionContext"/> by adding strategies, policies, etc. to
            install it's functions into the container.</remarks>
        </member>
        <member name="T:Caliburn.Unity.UnityAdapter">
            <summary>
            An adapter allowing an <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/> to plug into Caliburn via <see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator"/> and <see cref="T:Caliburn.Core.IoC.IRegistry"/>.
            </summary>
        </member>
        <member name="M:Caliburn.Unity.UnityAdapter.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Caliburn.Unity.UnityAdapter"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Caliburn.Unity.UnityAdapter.DoGetInstance(System.Type,System.String)">
            <summary>
                        When implemented by inheriting classes, this method will do the actual work of resolving
                        the requested service instance.
            </summary>
            <param name="serviceType">Type of instance requested.</param>
            <param name="key">Name of registered service you want. May be null.</param>
            <returns>
            The requested service instance.
            </returns>
        </member>
        <member name="M:Caliburn.Unity.UnityAdapter.DoGetAllInstances(System.Type)">
            <summary>
                        When implemented by inheriting classes, this method will do the actual work of
                        resolving all the requested service instances.
            </summary>
            <param name="serviceType">Type of service requested.</param>
            <returns>
            Sequence of service instance objects.
            </returns>
        </member>
        <member name="M:Caliburn.Unity.UnityAdapter.WithProxyFactory``1">
            <summary>
            Installs a proxy factory.
            </summary>
            <typeparam name="T">The type of the proxy factory.</typeparam>
            <returns>
            A container with an installed proxy factory.
            </returns>
        </member>
        <member name="P:Caliburn.Unity.UnityAdapter.Container">
            <summary>
            Gets the <see cref="T:Microsoft.Practices.Unity.IUnityContainer"/>.
            </summary>
            <value>The container.</value>
        </member>
    </members>
</doc>
