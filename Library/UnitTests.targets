<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<ReportsPath Condition=" '$(ReportsPath)' == '' ">..\..\Reports\</ReportsPath>
		<GallioReportsPath Condition=" '$(GallioReportsPath)' == '' ">..\..\$(ReportsPath)</GallioReportsPath>
		<RunUnitTests Condition=" '$(RunUnitTests)' == '' ">true</RunUnitTests>
	</PropertyGroup>
	<UsingTask AssemblyFile="Gallio\bin\Gallio.MSBuildTasks.dll"
			   TaskName="Gallio" />

	<!-- NCover exit codes are:
		  0: Success
		  2: Exception in test runner
		  3: Coverage requirement not met -->

	<Target Name="PrepareForUnitTests">

		<!-- Make sure the Reports folder exists -->
		<MakeDir Directories="$(ReportsPath)" />

	</Target>

	<Target Name="TestGallioCodeCoverage"
			Inputs="@(MainAssembly);@(GallioTestedAssembly)"
			Condition=" '@(GallioTestedAssembly)' != '' "
			DependsOnTargets="CoreBuild; CopyFilesToOutputDirectory; PrepareForUnitTests"
			Outputs="@(MainAssembly->'$(OutDir)%(Filename).Gallio.success.txt');@(GallioTestFixtureAssembly->'$(ReportsPath)%(Filename).Gallio.coverage.xml');@(MainAssembly->'$(ReportsPath)%(Filename).Gallio.tests.xml')">

		<!-- Add the assembly being built as a test fixture assembly -->
		<CreateItem Include="@(MainAssembly)">
			<Output TaskParameter="Include"
					ItemName="GallioTestFixtureAssembly" />
		</CreateItem>

		<CreateProperty Value="@(GallioTestedAssembly->'%(Filename)')">
			<Output TaskParameter="Value"
					PropertyName="GallioTestedAssemblyFilename"/>
		</CreateProperty>

		<CreateProperty Value="@(GallioTestFixtureAssembly->'$(GallioReportsPath)%(Filename).Gallio.coverage.xml')">
			<Output TaskParameter="Value"
					PropertyName="GallioTestedAssemblyCoverageOutput"/>
		</CreateProperty>

		<!-- Run Gallio from within NCover, recording the exit code as $(UnitTestResult) -->
		<Gallio Files="@(GallioTestFixtureAssembly)"
				ReportDirectory="$(ReportsPath)"
				ReportNameFormat="@(GallioTestFixtureAssembly->'%(Filename).Gallio.tests')"
				ReportTypes="xml"
				RunnerProperties="NCoverArguments='//at $(GallioTestedAssemblyCoverageOutput).trend //ea Twiddler.Core.NoCoverageAttribute%3BMbUnit.Framework.TestFixtureAttribute%3BMbUnit.Framework.TestAttribute%3BSystem.Runtime.CompilerServices.CompilerGeneratedAttribute%3BSystem.CodeDom.Compiler.GeneratedCodeAttribute%3BSystem.Diagnostics.DebuggerNonUserCodeAttribute //x $(GallioTestedAssemblyCoverageOutput) //l $(OutDir)Coverage.Gallio.log //a $(GallioTestedAssemblyFilename)'">
			<!--Gallio Assemblies="@(GallioTestFixtureAssembly)" RunnerType="NCover" RunnerProperties="NCoverArguments='//ea MbUnit.Framework.TestFixtureAttribute%3BMbUnit.Framework.TestAttribute //x @(GallioTestedAssembly->'$(ReportsPath)%(Filename).Gallio.coverage.xml') //l $(OutDir)Coverage.Gallio.log //a @(GallioTestedAssembly->'%(Filename)')'"-->
			<!-- This tells MSBuild to store the output value of the task's ExitCode property
				 into the project's ExitCode property -->
			<Output TaskParameter="ExitCode"
					PropertyName="UnitTestResult"/>
		</Gallio>

		<Message Text="Running tests in @(GallioTestFixtureAssembly->'%(Filename)') with Gallio returned $(UnitTestResult)." />

		<!-- The coverage report that was generated by NCover -->
		<CreateItem Include="@(GallioTestFixtureAssembly->'$(ReportsPath)%(Filename).Gallio.coverage.xml')">
			<Output TaskParameter="Include"
					ItemName="CoverageReport" />
			<Output TaskParameter="Include"
					ItemName="FileWrites" />
		</CreateItem>

		<!-- The test report that was generated by Gallio -->
		<CreateItem Include="@(GallioTestFixtureAssembly->'$(ReportsPath)%(Filename).Gallio.tests.xml')">
			<Output TaskParameter="Include"
					ItemName="UnitTestReport" />
			<Output TaskParameter="Include"
					ItemName="FileWrites" />
		</CreateItem>

		<Error Condition="'$(UnitTestResult)' != '0' and '$(UnitTestResult)' != '3'"
			   Code="$(UnitTestResult)"
			   Text="Gallio tests failed in @(GallioTestFixtureAssembly->'%(Filename)')." />

		<!-- If a unit tests succeeded update the timestamp of the file indicating that they passed -->
		<WriteLinesToFile File="@(GallioTestFixtureAssembly->'$(OutDir)%(Filename).Gallio.success.txt')"
						  Lines="Success"
						  Overwrite="true" />

		<!-- The file indicating tests passed -->
		<CreateItem Include="@(MSTestTestedAssembly->'$(OutDir)%(Filename).Gallio.success.txt')">
			<Output TaskParameter="Include"
					ItemName="FileWrites" />
		</CreateItem>

	</Target>

	<Target Name="GenerateUnitTestReports"
			Condition="'$(BuildingInsideVisualStudio)'!='true' and '$(RunUnitTests)'=='true'"
			DependsOnTargets="TestGallioCodeCoverage; CoreBuild; CopyFilesToOutputDirectory" />

</Project>
